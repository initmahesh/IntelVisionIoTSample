FROM ubuntu:16.04

WORKDIR /app


RUN apt-get update && \
    apt-get install -y --no-install-recommends libcurl4-openssl-dev python3-pip libboost-python1.58-dev libpython3-dev \
    python3.5  zip x11-apps lsb-core wget cpio sudo libpng-dev zlib1g-dev udev\
    libnuma1 ocl-icd-libopencl1 clinfo libboost-filesystem1.58.0 libboost-thread1.58.0 && \
    rm -rf /var/lib/apt/lists/*

#From OpenVino git https://github.com/intel/Edge-Analytics-FaaS/blob/master/Azure-IoT-Edge/OnnxRuntime/UnifiedDocker/Dockerfile
#Get the R5.0.1 openvino file from here https://software.intel.com/en-us/openvino-toolkit/choose-download/free-download-linux
RUN wget https://resourcesincode.blob.core.windows.net/intelvision/l_openvino_toolkit_p_2018.5.455.tgz

RUN pip3 install --upgrade pip setuptools 

COPY requirements.txt ./

RUN pip3 install -r requirements.txt

ENV LD_LIBRARY_PATH=/usr/lib:/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH



#COPY l_openvino_toolkit_p_2018.5.455.tgz ./

RUN tar -xzf l_openvino_toolkit*.tgz && \
    rm -rf l_openvino_toolkit*.tgz && \
    cd l_openvino_toolkit* && \
    sed -i 's/decline/accept/g' silent.cfg && \
    ./install.sh -s silent.cfg && \
    ./install_cv_sdk_dependencies.sh && \
    cd - && \
    rm -rf l_openvino_toolkit*
RUN wget https://github.com/intel/compute-runtime/releases/download/19.15.12831/intel-gmmlib_19.1.1_amd64.deb
RUN wget https://github.com/intel/compute-runtime/releases/download/19.15.12831/intel-igc-core_1.0.2-1787_amd64.deb
RUN wget https://github.com/intel/compute-runtime/releases/download/19.15.12831/intel-igc-opencl_1.0.2-1787_amd64.deb
RUN wget https://github.com/intel/compute-runtime/releases/download/19.15.12831/intel-opencl_19.15.12831_amd64.deb
RUN wget https://github.com/intel/compute-runtime/releases/download/19.15.12831/intel-ocloc_19.15.12831_amd64.deb

RUN sudo dpkg -i *.deb

#### Set env paths according to $INTEL_CVSDK_DIR/bin/setupvars.sh
ENV INSTALLDIR=/opt/intel/computer_vision_sdk
ENV INTEL_CVSDK_DIR=${INSTALLDIR}
ENV LD_LIBRARY_PATH=${INSTALLDIR}/deployment_tools/model_optimizer/model_optimizer_caffe/bin:${LD_LIBRARY_PATH}
ENV ModelOptimizer_ROOT_DIR=${INSTALLDIR}/deployment_tools/model_optimizer/model_optimizer_caffe

ENV InferenceEngine_DIR=${INTEL_CVSDK_DIR}/deployment_tools/inference_engine/share

ENV IE_PLUGINS_PATH=${INTEL_CVSDK_DIR}/deployment_tools/inference_engine/lib/ubuntu_16.04/intel64

ENV LD_LIBRARY_PATH=/opt/intel/opencl:${INSTALLDIR}/deployment_tools/inference_engine/external/cldnn/lib:${INSTALLDIR}/inference_engine/external/gna/lib:${INSTALLDIR}/deployment_tools/inference_engine/external/mkltiny_lnx/lib:${INSTALLDIR}/deployment_tools/inference_engine/external/omp/lib:${IE_PLUGINS_PATH}:${LD_LIBRARY_PATH}

ENV OpenCV_DIR=${INSTALLDIR}/opencv/share/OpenCV

ENV LD_LIBRARY_PATH=${INSTALLDIR}/opencv/lib:${INSTALLDIR}/opencv/share/OpenCV/3rdparty/lib:${LD_LIBRARY_PATH}

ENV PATH=${INTEL_CVSDK_DIR}/deployment_tools/model_optimizer:$PATH

ENV PYTHONPATH=${INTEL_CVSDK_DIR}/deployment_tools/model_optimizer:$PYTHONPATH

ENV PYTHONPATH=$INTEL_CVSDK_DIR/python/python3.5:${INTEL_CVSDK_DIR}/python/python3.5/ubuntu16:${PYTHONPATH}

ENV HDDL_INSTALL_DIR=${INSTALLDIR}/deployment_tools/inference_engine/external/hddl

ENV LD_LIBRARY_PATH=${INSTALLDIR}/deployment_tools/inference_engine/external/hddl/lib:$LD_LIBRARY_PATH

RUN rm -rf *.deb

ARG DEVICE


RUN wget https://resourcesincode.blob.core.windows.net/intelvision/onnxruntime_openvino-0.4.0-cp35-cp35m-linux_x86_64.whl
RUN wget https://resourcesincode.blob.core.windows.net/intelvision/Tiny_YoloV2_Cleanroom.onnx
RUN pip3 install /app/*-linux_x86_64.whl && rm /app/*.whl

# RUN useradd -ms /bin/bash moduleuser
# USER moduleuser

#RUN chmod +x /app/start.sh
#ENTRYPOINT ["/app/start.sh"]
COPY /resources/. .

CMD [ "python3", "-u", "./main.py" ]